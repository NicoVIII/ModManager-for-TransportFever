//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TpfModManager.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localisation {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localisation() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TpfModManager.Resources.Localisation", typeof(Localisation).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mod is already installed. ähnelt.
        /// </summary>
        internal static string Install_AlreadyInstalled {
            get {
                return ResourceManager.GetString("Install_AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bulk installation complete. ähnelt.
        /// </summary>
        internal static string Install_BulkComplete {
            get {
                return ResourceManager.GetString("Install_BulkComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose mod archive ähnelt.
        /// </summary>
        internal static string Install_ChooseArchive {
            get {
                return ResourceManager.GetString("Install_ChooseArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose folder with mod archives ähnelt.
        /// </summary>
        internal static string Install_ChooseFolder {
            get {
                return ResourceManager.GetString("Install_ChooseFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation complete. ähnelt.
        /// </summary>
        internal static string Install_Complete {
            get {
                return ResourceManager.GetString("Install_Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Something is wrong with this mod :( ähnelt.
        /// </summary>
        internal static string Install_ModInvalid {
            get {
                return ResourceManager.GetString("Install_ModInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This file is not a valid archive. ähnelt.
        /// </summary>
        internal static string Install_NotAnArchive {
            get {
                return ResourceManager.GetString("Install_NotAnArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sadly this mod is not supported yet. ähnelt.
        /// </summary>
        internal static string Install_NotSupported {
            get {
                return ResourceManager.GetString("Install_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mod was successfully upgraded. ähnelt.
        /// </summary>
        internal static string Install_UpgradeComplete {
            get {
                return ResourceManager.GetString("Install_UpgradeComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to upgrade the mod in the folder &apos;{0}&apos;? ähnelt.
        /// </summary>
        internal static string Install_UpgradeConfirm {
            get {
                return ResourceManager.GetString("Install_UpgradeConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Author(s) ähnelt.
        /// </summary>
        internal static string List_Authors {
            get {
                return ResourceManager.GetString("List_Authors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input TpfNetId ähnelt.
        /// </summary>
        internal static string List_ChangeTpfNetId_Input {
            get {
                return ResourceManager.GetString("List_ChangeTpfNetId_Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change tpfnetID ähnelt.
        /// </summary>
        internal static string List_ContextMenu_ChangeTpfNetId {
            get {
                return ResourceManager.GetString("List_ContextMenu_ChangeTpfNetId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open folder ähnelt.
        /// </summary>
        internal static string List_ContextMenu_OpenFolder {
            get {
                return ResourceManager.GetString("List_ContextMenu_OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open website ähnelt.
        /// </summary>
        internal static string List_ContextMenu_OpenUrl {
            get {
                return ResourceManager.GetString("List_ContextMenu_OpenUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uninstall ähnelt.
        /// </summary>
        internal static string List_ContextMenu_Uninstall {
            get {
                return ResourceManager.GetString("List_ContextMenu_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder ähnelt.
        /// </summary>
        internal static string List_Folder {
            get {
                return ResourceManager.GetString("List_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        internal static string List_Name {
            get {
                return ResourceManager.GetString("List_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version on server ähnelt.
        /// </summary>
        internal static string List_RemoteVersion {
            get {
                return ResourceManager.GetString("List_RemoteVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TpfnetID ähnelt.
        /// </summary>
        internal static string List_TpfNetId {
            get {
                return ResourceManager.GetString("List_TpfNetId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update? ähnelt.
        /// </summary>
        internal static string List_Update {
            get {
                return ResourceManager.GetString("List_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        internal static string List_Update_Yes {
            get {
                return ResourceManager.GetString("List_Update_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        internal static string List_Version {
            get {
                return ResourceManager.GetString("List_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        internal static string Menu_Exit {
            get {
                return ResourceManager.GetString("Menu_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File ähnelt.
        /// </summary>
        internal static string Menu_File {
            get {
                return ResourceManager.GetString("Menu_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install ähnelt.
        /// </summary>
        internal static string Menu_Install {
            get {
                return ResourceManager.GetString("Menu_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die From file... ähnelt.
        /// </summary>
        internal static string Menu_Install_FromFile {
            get {
                return ResourceManager.GetString("Menu_Install_FromFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die From folder... ähnelt.
        /// </summary>
        internal static string Menu_Install_FromFolder {
            get {
                return ResourceManager.GetString("Menu_Install_FromFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search for installed mods ähnelt.
        /// </summary>
        internal static string Menu_Search {
            get {
                return ResourceManager.GetString("Menu_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search complete. ähnelt.
        /// </summary>
        internal static string Search_Complete {
            get {
                return ResourceManager.GetString("Search_Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select TPF &quot;mods&quot; folder ähnelt.
        /// </summary>
        internal static string Setup_ChooseModFolder {
            get {
                return ResourceManager.GetString("Setup_ChooseModFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please set the path to Transport Fever&apos;s &apos;mods&apos; folder! ähnelt.
        /// </summary>
        internal static string Setup_PleaseSetPath {
            get {
                return ResourceManager.GetString("Setup_PleaseSetPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mod successfully uninstalled! ähnelt.
        /// </summary>
        internal static string Uninstall_Complete {
            get {
                return ResourceManager.GetString("Uninstall_Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to uninstall this mod? ähnelt.
        /// </summary>
        internal static string Uninstall_Confirm {
            get {
                return ResourceManager.GetString("Uninstall_Confirm", resourceCulture);
            }
        }
    }
}
